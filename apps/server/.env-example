####################################################################################################
#
# These values set environment variables which modify core settings of Directus.
#
# Values in square brackets are the default values.
#
# The following options are not all possible options. For more, see
# https://docs.directus.io/self-hosted/config-options/
#
####################################################################################################
####################################################################################################

### General

# IP or host the API listens on ["0.0.0.0"]
HOST="0.0.0.0"

# The port Directus will run on [8055]
PORT=8055

# The URL where your API can be reached on the web. It is also used for things like OAuth redirects,
# forgot-password emails, and logos that needs to be publicly available on the internet. ["/"]
PUBLIC_URL="/"
# PUBLIC_URL="http://localhost:8055"


####################################################################################################
### Security

KEY=
SECRET=


# Unique identifier for the project
# KEY="xxxxxxx-xxxxxx-xxxxxxxx-xxxxxxxxxx"

# Secret string for the project
# SECRET="abcdef"

# The duration that the access token is valid ["15m"]
ACCESS_TOKEN_TTL="15m"

# The duration that the refresh token is valid, and also how long users stay logged-in to the App ["7d"]
REFRESH_TOKEN_TTL="7d"

# Whether or not to use a secure cookie for the refresh token in cookie mode [false]
REFRESH_TOKEN_COOKIE_SECURE=false

# Value for sameSite in the refresh token cookie when in cookie mode ["lax"]
REFRESH_TOKEN_COOKIE_SAME_SITE="lax"

# Name of refresh token cookie ["directus_refresh_token"]
REFRESH_TOKEN_COOKIE_NAME="directus_refresh_token"

# Which domain to use for the refresh cookie. Useful for development mode.
# REFRESH_TOKEN_COOKIE_DOMAIN

# The duration in milliseconds that a login request will be stalled for,
# and it should be greater than the time taken for a login request with an invalid password [500]
# LOGIN_STALL_TIME=500

CONTENT_SECURITY_POLICY_DIRECTIVES__FRAME_SRC=array:http://localhost:*,self
# Whether or not to enable the CORS headers [false]
CORS_ENABLED=true

# Value for the Access-Control-Allow-Origin header. Use true to match the Origin header, or provide a domain or a CSV of domains for specific access [false]
CORS_ORIGIN=true

# Value for the Access-Control-Allow-Methods header [GET,POST,PATCH,DELETE]
CORS_METHODS=GET,POST,PATCH,DELETE

# Value for the Access-Control-Allow-Headers header [Content-Type,Authorization]
CORS_ALLOWED_HEADERS=Content-Type,Authorization

# Value for the Access-Control-Expose-Headers header [Content-Range]
CORS_EXPOSED_HEADERS=Content-Range

# Whether or not to send the Access-Control-Allow-Credentials header [true]
CORS_CREDENTIALS=true

# Value for the Access-Control-Max-Age header [18000]
CORS_MAX_AGE=18000

####################################################################################################
### Argon2

# How much memory to use when generating hashes, in KiB [4096]
# HASH_MEMORY_COST=81920

# The length of the hash function output in bytes [32]
# HASH_HASH_LENGTH=32

# The amount of passes (iterations) used by the hash function. It increases hash strength at the cost of time required to compute [3]
# HASH_TIME_COST=10

# The amount of threads to compute the hash on. Each thread has a memory pool with HASH_MEMORY_COST size [1]
# HASH_PARALLELISM=2

# The variant of the hash function (0: argon2d, 1: argon2i, or 2: argon2id) [2]
# HASH_TYPE=2

# An extra and optional non-secret value. The value will be included B64 encoded in the parameters portion of the digest []
# HASH_ASSOCIATED_DATA=foo

####################################################################################################
### Auth Providers

DB_CLIENT="pg"
DB_HOST="127.0.0.1"
DB_PORT="5432"
DB_DATABASE=
DB_USER=
DB_PASSWORD=
DB_SSL="false"
